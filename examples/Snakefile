sketches_3 = ["2", "47", "63"]
sketches_10 = ["2", "47", "48", "49", "51", "52", "53", "59", "60", "63"]

rule all:
    input:
        "plot2.3sketches.cmp.png",
        "plot2.cut.3sketches.cmp.png",
        "plot2.cut.10sketches.cmp.png",
        "plot2.cut.dendro.10sketches.cmp.png",
        "mds.10sketches.cmp.png",
        "mds2.10sketches.cmp.png",
        "plot2.pairwise.10sketches.cmp.png",
        "plot3.10sketches.cmp.png",
        "clustermap1.10sketches.png",
        "10sketches.upset.png",
        "tsne.64sketches.cmp.png",
        "tsne2.64sketches.cmp.png",
        "3sketches.venn.png",
        "tax-mg.sankey.png",
        "tax-annot.sankey.png",

rule make_10sketches:
    input:
        expand("sketches/{n}.sig.zip", n=sketches_10)
    output:
        "10sketches.sig.zip"
    shell: """
        sourmash sig cat {input} -o {output}
    """

rule cmp_3sketches:
    input:
        expand("sketches/{n}.sig.zip", n=sketches_3)
    output:
        cmp="3sketches.cmp",
        labels="3sketches.cmp.labels.txt",
        labels_csv="3sketches.cmp.labels_to.csv",
    shell: """
        sourmash compare {input} -o {output.cmp} \
           --labels-to {output.labels_csv}
    """

rule plot2_3sketches:
    input:
        cmp="3sketches.cmp",
        labels="3sketches.cmp.labels_to.csv",
    output:
        "plot2.3sketches.cmp.png",
    shell: """
        sourmash scripts plot2 {input.cmp} {input.labels} -o {output} \
             --figsize-x=5 --figsize-y=3
    """

rule plot2_3sketches_cut:
    input:
        cmp="3sketches.cmp",
        labels="3sketches.cmp.labels_to.csv",
    output:
        "plot2.cut.3sketches.cmp.png",
    shell: """
        sourmash scripts plot2 {input.cmp} {input.labels} -o {output} \
            --cut-point=1.2 --figsize-x=5 --figsize-y=3
    """


rule cmp_10sketches:
    input:
        expand("sketches/{n}.sig.zip", n=sketches_10)
    output:
        cmp="10sketches.cmp",
        labels="10sketches.cmp.labels.txt",
        labels_csv="10sketches.cmp.labels_to.csv",
    shell: """
        sourmash compare {input} -o {output.cmp} \
           --labels-to {output.labels_csv}
    """

rule plot2_10sketches_cut:
    input:
        cmp="10sketches.cmp",
        labels="10sketches.cmp.labels_to.csv",
    output:
        png="plot2.cut.10sketches.cmp.png",
        clusters=expand("10sketches.cmp.{n}.csv", n=range(1,7)),
    shell: """
        sourmash scripts plot2 {input.cmp} {input.labels} -o {output.png} \
            --cut-point=1.35 --cluster-out --figsize-x=5 --figsize-y=3
    """

rule plot2_10sketches_cut_dendro_only:
    input:
        cmp="10sketches.cmp",
        labels="10sketches.cmp.labels_to.csv",
    output:
        "plot2.cut.dendro.10sketches.cmp.png",
    shell: """
        sourmash scripts plot2 {input.cmp} {input.labels} -o {output} \
            --cut-point=1.35 --cluster-out --figsize-x=5 --figsize-y=3 \
            --dendrogram-only
    """

rule mds_10sketches:
    input:
        cmp="10sketches.cmp",
        labels="10sketches.cmp.labels_to.csv",
        categories="sketches/10sketches-categories.csv",
    output:
        "mds.10sketches.cmp.png"
    shell: """
        sourmash scripts mds {input.cmp} {input.labels} -o {output} \
           -C {input.categories}
    """

rule cmp_64sketches:
    input:
        "sketches/64sketches.sig.zip",
    output:
        cmp="64sketches.cmp",
        labels="64sketches.cmp.labels.txt",
        labels_csv="64sketches.cmp.labels_to.csv",
    shell: """
        sourmash compare {input} -o {output.cmp} \
           --labels-to {output.labels_csv}
    """

rule tsne_64sketches:
    input:
        cmp="64sketches.cmp",
        labels="64sketches.cmp.labels_to.csv",
        categories="64sketches.pairwise.clusters.cats.csv",
    output:
        "tsne.64sketches.cmp.png"
    shell: """
        sourmash scripts tsne {input.cmp} {input.labels} -o {output} \
           -C {input.categories}
    """

rule r10sketches_pairwise:
    input:
        "10sketches.sig.zip",
    output:
        cmp="10sketches.pairwise.csv",
    shell: """
        sourmash scripts pairwise {input} -o {output} --write-all
    """

rule mds2_10sketches:
    input:
        cmp="10sketches.pairwise.csv",
        categories="sketches/10sketches-categories.csv",
    output:
        "mds2.10sketches.cmp.png"
    shell: """
        sourmash scripts mds2 {input.cmp} -o {output} \
           -C {input.categories}
    """

rule r64sketches_pairwise:
    input:
        "sketches/64sketches.sig.zip",
    output:
        cmp="64sketches.pairwise.csv",
    shell: """
        sourmash scripts pairwise {input} -o {output} --write-all
    """

rule r64sketches_cluster:
    input:
        cmp="64sketches.pairwise.csv",
    output:
        clusters="64sketches.pairwise.clusters.csv",
        cluster_sizes="64sketches.pairwise.cluster_sizes.txt",
    shell: """
        sourmash scripts cluster {input} -o {output.clusters} \
            --cluster-sizes {output.cluster_sizes} --similarity jaccard -t 0
    """

rule r64sketches_clusters_to_cats:
    input:
        cmp="64sketches.pairwise.csv",
        clusters="64sketches.pairwise.clusters.csv",
    output:
        cats="64sketches.pairwise.clusters.cats.csv",
    shell: """
        sourmash scripts cluster_to_categories {input.cmp} \
            {input.clusters} -o {output}
    """

rule tsne2_64sketches:
    input:
        cmp="64sketches.pairwise.csv",
        categories="64sketches.pairwise.clusters.cats.csv",
    output:
        png="tsne2.64sketches.cmp.png",
        cmp="tsne2.64sketches.cmp",
        labels="tsne2.64sketches.labels.csv",
    shell: """
        sourmash scripts tsne2 {input.cmp} -o {output.png} \
           -C {input.categories} --save-matrix {output.cmp} \
           --save-labels-to {output.labels}
    """

rule convert_10sketches_pairwise_to_cmp:
    input:
        cmp="10sketches.pairwise.csv",
    output:
        cmp="10sketches.pairwise.cmp",
        labels_txt="10sketches.pairwise.cmp.labels.txt",
        labels_csv="10sketches.pairwise.cmp.labels_to.csv",
    shell: """
        sourmash scripts pairwise_to_matrix {input.cmp} -o {output.cmp} \
            --labels-to {output.labels_csv}
    """
        

rule plot2_10sketches_pairwise:
    input:
        cmp="10sketches.pairwise.cmp",
        labels_csv="10sketches.pairwise.cmp.labels_to.csv",
    output:
        "plot2.pairwise.10sketches.cmp.png",
    shell: """
        sourmash scripts plot2 {input.cmp} {input.labels_csv} -o {output} \
            --figsize-x=5 --figsize-y=3
    """


rule plot3_10sketches:
    input:
        cmp="10sketches.cmp",
        labels="10sketches.cmp.labels_to.csv",
        categories="sketches/10sketches-categories.csv",
    output:
        "plot3.10sketches.cmp.png",
    shell: """
        sourmash scripts plot3 {input.cmp} {input.labels} -o {output} \
            -C {input.categories}
    """

rule r10sketches_manysearch:
    input:
        query="10sketches.sig.zip",
        against ="sketches/shew21.sig.zip",
    output:
        cmp="10sketches.manysearch.csv",
    shell: """
        sourmash scripts manysearch {input.query} {input.against} -o {output}
    """

rule clustermap1_10sketches:
    input:
        cmp="10sketches.manysearch.csv",
        categories="sketches/10sketches-categories.csv",
    output:
        "clustermap1.10sketches.png",
    shell: """
        sourmash scripts clustermap1 {input.cmp} -o {output} \
            -u containment -R {input.categories}
    """

rule upset_10sketches:
    input:
        sigs="10sketches.sig.zip"
    output:
        fig="10sketches.upset.png"
    shell: """
        sourmash scripts upset {input.sigs} -o {output.fig}
    """

rule venn_3sketches:
    input:
        expand("sketches/{n}.sig.zip", n=sketches_3)
    output:
        png="3sketches.venn.png",
    shell: """
        sourmash scripts venn {input} -o {output} --ident
    """
    
rule sankey_mgx_summary:
    input:
        "tax/test.tax-mg.summarized.csv"
    output:
        png="tax-mg.sankey.png"
    shell:
        """
        sourmash scripts sankey --summary-csv {input} -o {output}
        """

rule sankey_mgx_annotate:
    input:
        "tax/test.gather.with-lineages.csv"
    output:
        png="tax-annot.sankey.png"
    shell:
        """
        sourmash scripts sankey --annotate-csv {input} -o {output}
        """
